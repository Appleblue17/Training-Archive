1:"$Sreact.fragment"
2:I[8521,[],""]
3:I[1661,[],""]
b:I[939,[],""]
:HL["/Training-Archive/_next/static/media/cc27cf3ff100ea21-s.p.ttf","font",{"crossOrigin":"","type":"font/ttf"}]
:HL["/Training-Archive/_next/static/css/dd3bbe79ef28f60a.css","style"]
:HL["/Training-Archive/_next/static/css/9f4210e542df69af.css","style"]
0:{"P":null,"b":"ty5iqF5zM1STPdP6bQfHM","p":"/Training-Archive","c":["","view","contests","2025-08-14%20%22%E5%BD%B1%E7%9F%B3Insta360%E6%9D%AF%222025%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A510","problems","G","code.cpp"],"i":false,"f":[[["",{"children":["view",{"children":["contests",{"children":[["contest","2025-08-14%20%22%E5%BD%B1%E7%9F%B3Insta360%E6%9D%AF%222025%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A510","d"],{"children":["problems",{"children":[["problem","G","d"],{"children":[["file","code.cpp","d"],{"children":["__PAGE__",{}]}]}]}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/Training-Archive/_next/static/css/dd3bbe79ef28f60a.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"charSet":"UTF-8"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","type":"image/png","href":"https://appleblue17.github.io/Training-Archive/archive-bot.png"}],["$","title",null,{"children":"Training Archive"}]]}],["$","body",null,{"className":"__className_e3f162 antialiased","children":[["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","footer",null,{"className":"my-4","children":[["$","p",null,{"className":"mt-0 border-t border-gray-700 pt-4 text-center text-sm text-gray-400","children":["© 2025 Training Archive ·"," ",["$","a",null,{"href":"https://github.com/appleblue17/Training-Archive/","target":"_blank","rel":"noopener noreferrer","className":"hover:text-blue-300","children":[["$","svg",null,{"stroke":"currentColor","fill":"none","strokeWidth":"2","viewBox":"0 0 24 24","strokeLinecap":"round","strokeLinejoin":"round","className":"mr-1 inline","children":["$undefined",[["$","path","0",{"d":"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],"GitHub"]}]," ","· MIT License"]}],["$","p",null,{"className":"mt-2 text-center text-sm text-gray-400","children":["Designed and developed by",["$","a",null,{"href":"https://github.com/Appleblue17","target":"_blank","rel":"noopener noreferrer","className":"px-1 text-blue-400 hover:text-blue-300","children":"Appleblue17"}]]}],["$","p",null,{"className":"mt-2 text-center text-xs text-gray-500","children":"Disclaimer: This project is for educational purposes only. Use at your own risk."}]]}]]}]]}]]}],{"children":["view",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["contests","$L4",{"children":[["contest","2025-08-14%20%22%E5%BD%B1%E7%9F%B3Insta360%E6%9D%AF%222025%E7%89%9B%E5%AE%A2%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A510","d"],"$L5",{"children":["problems","$L6",{"children":[["problem","G","d"],"$L7",{"children":[["file","code.cpp","d"],"$L8",{"children":["__PAGE__","$L9",{},null,false]},null,false]},null,false]},null,false]},null,false]},null,false]},null,false]},null,false],"$La",false]],"m":"$undefined","G":["$b",[]],"s":false,"S":true}
d:I[7055,[],"OutletBoundary"]
f:I[9909,[],"AsyncMetadataOutlet"]
11:I[7055,[],"ViewportBoundary"]
13:I[7055,[],"MetadataBoundary"]
14:"$Sreact.suspense"
4:["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
5:["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
6:["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
7:["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
8:["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]
9:["$","$1","c",{"children":["$Lc",[["$","link","0",{"rel":"stylesheet","href":"/Training-Archive/_next/static/css/9f4210e542df69af.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$Ld",null,{"children":["$Le",["$","$Lf",null,{"promise":"$@10"}]]}]]}]
a:["$","$1","h",{"children":[null,[["$","$L11",null,{"children":"$L12"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$L13",null,{"children":["$","div",null,{"hidden":true,"children":["$","$14",null,{"fallback":null,"children":"$L15"}]}]}]]}]
16:I[6417,["215","static/chunks/1951f239-e4c7a40f4938f7cd.js","81","static/chunks/81-d563b76c84969650.js","947","static/chunks/app/view/contests/%5Bcontest%5D/problems/%5Bproblem%5D/%5Bfile%5D/page-8b159e72c21ca0c8.js"],"default"]
17:T1981,#pragma GCC optimize(2)
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef double dou;
typedef pair<int,int> pii;
#define fi first
#define se second
#define mapa make_pair
typedef long double ld;
typedef unsigned long long ull;
#define ep emplace_back
template <typename T>inline void read(T &x){
    x=0;char c=getchar();bool f=0;
    for(;c<'0'||c>'9';c=getchar()) f|=(c=='-');
    for(;c>='0'&&c<='9';c=getchar())
    x=(x<<1)+(x<<3)+(c^48);
    x=(f?-x:x);
}
const int N=1e5+5, inf=1e9;
int T, n, m, q;
ll a[N];
namespace task1{
    using namespace __gnu_pbds;
    using les = less <ll>;
    using ntp = null_type;
    tree <ll, ntp, les, rb_tree_tag, tree_order_statistics_node_update> tr[350], trall;
    int rk[N], id[N], sz[350];
    void solve(){
        for(int i=1; i<=n; ++i) a[i]=(a[i]<<31ll)+i;
        for(int i=1; i<=n; ++i) rk[i]=i;
        sort(rk+1, rk+n+1, [&](int x, int y){return a[x]<a[y];});
        for(int i=1; i<=n; ++i){
            id[i]=(i+m-1)/m; sz[id[i]]++;
            tr[id[i]].insert(a[rk[i]]);
            trall.insert(a[rk[i]]);
        }
        ll x, y, z; ll lstans=0;
        while(q--){
            read(x); read(y); read(z);
            x=1+(x+lstans)%n; y=1+(y+lstans)%inf;z=1+(z+lstans)%n;
            int pos1=trall.order_of_key(a[x])+1;
            trall.erase(a[x]);
            y=(y<<31ll)+x;
            trall.insert(y);
            int pos2=trall.order_of_key(y)+1;
            if(id[pos1]==id[pos2]){
                tr[id[pos1]].erase(a[x]);
                tr[id[pos1]].insert(y);
                a[x]=y;
            }
            else if(pos1<pos2){
                tr[id[pos1]].erase(a[x]);
                ll tem;
                for(int i=id[pos1]+1; i<=id[pos2]; ++i) {
                    tem=*tr[i].find_by_order(0);
                    tr[i-1].insert(tem);
                    tr[i].erase(tem);
                }
                tr[id[pos2]].insert(y);
                a[x]=y;
            }
            else{
                tr[id[pos1]].erase(a[x]);
                ll tem;
                for(int i=id[pos1]-1; i>=id[pos2]; --i) {
                    tem=*tr[i].find_by_order(sz[i]-1);
                    tr[i+1].insert(tem);
                    tr[i].erase(tem);
                }
                tr[id[pos2]].insert(y);
                a[x]=y;
            }
            lstans=0;
            for(int i=1; i<=id[z]; ++i) lstans+=(*tr[i].find_by_order((z-1)%m))>>31ll;
            printf("%lld\n", lstans);
        }
    }
}
namespace task2{
    using namespace __gnu_pbds;
    using les = less <ll>;
    using ntp = null_type;
    tree <ll, ntp, les, rb_tree_tag, tree_order_statistics_node_update> trall;
    int rk[N];
    mt19937 rnd(100000193);
    struct node{
        int ls, rs;
        int siz, pri;
        ll val; __int128 sum;
    }tr[N];
    int rt[N];
    int idx;
    void push_up(int rt){
        tr[rt].siz=1+tr[tr[rt].ls].siz+tr[tr[rt].rs].siz;
        tr[rt].sum=tr[rt].val+tr[tr[rt].ls].sum+tr[tr[rt].rs].sum;
        return ;
    }
    int Merge(int x, int y){
        if(x==0||y==0) return x+y;
        if(tr[x].pri<tr[y].pri){
            tr[x].rs=Merge(tr[x].rs, y);
            push_up(x);
            return x;
        }
        tr[y].ls=Merge(x, tr[y].ls);
        push_up(y);
        return y;
    }
    void Split(int rt, ll v, int &x, int &y){
        if(rt==0){
            x=y=0;
            return ;
        }
        if(tr[rt].val<=v){
            x=rt;
            Split(tr[rt].rs, v, tr[x].rs, y);
            push_up(x);
        }
        else{
            y=rt;
            Split(tr[rt].ls, v, x, tr[y].ls);
            push_up(y);
        }
    }
    ll getk(int x, int k){
        if(tr[tr[x].ls].siz>=k){
            return getk(tr[x].ls, k);
        }
        ll ret=(tr[tr[x].ls].sum+tr[x].val)>>31ll;
        k-=tr[tr[x].ls].siz+1;
        if(k!=0) ret+=getk(tr[x].rs, k);
        return ret;
    }
    int crt[N][3];
    void solve(){
        for(int i=1; i<=n; ++i) a[i]=(a[i]<<31ll)+i;
        for(int i=1; i<=n; ++i) rk[i]=i;
        sort(rk+1, rk+n+1, [&](int x, int y){return a[x]<a[y];});
        for(int i=1; i<=n; ++i){
            ++idx;
            tr[idx].val=tr[idx].sum=a[rk[i]]; tr[idx].pri=rnd();
            rt[(i-1)%m]=Merge(rt[(i-1)%m], idx);
            trall.insert(a[rk[i]]);
        }
        ll x, y, z; ll lstans=0;
        for(int o=n+1; o<=n+q; ++o){
            read(x); read(y); read(z);
            x=1+(x+lstans)%n; y=1+(y+lstans)%inf;z=1+(z+lstans)%n;
            if(a[x]==y){
                lstans=getk(rt[(z-1)%m], (z+m-1)/m);
                printf("%lld\n", lstans);
                continue;
            }
            int pos1=trall.order_of_key(a[x])+1;
            trall.erase(a[x]);
            y=(y<<31ll)+o;
            trall.insert(y);
            int pos2=trall.order_of_key(y)+1;
            int rt1, rt2, rt3, rt4;
            Split(rt[(pos1-1)%m], a[x]-1, rt1, rt2);
            Split(rt2, a[x], rt3, rt4);
            rt[(pos1-1)%m]=Merge(rt1, rt4);
            tr[rt3].val=tr[rt3].sum=y; tr[rt3].pri=rnd();
            int memrt3=rt3;
            if(a[x]<y){
                for(int i=0; i<m; ++i){
                    Split(rt[i], a[x], rt1, rt2);
                    Split(rt2, y, rt3, rt4);
                    crt[i][0]=rt1; crt[i][1]=rt4; crt[i][2]=rt3;
                }
                for(int i=0; i<m; ++i){
                    rt[i]=Merge(Merge(crt[i][0], crt[(i+1)%m][2]), crt[i][1]);
                }
            }
            else{
                for(int i=0; i<m; ++i){
                    Split(rt[i], y, rt1, rt2);
                    Split(rt2, a[x], rt3, rt4);
                    crt[i][0]=rt1; crt[i][1]=rt4; crt[i][2]=rt3;
                }
                for(int i=0; i<m; ++i){
                    rt[i]=Merge(Merge(crt[i][0], crt[(i+m-1)%m][2]), crt[i][1]);
                }
            }
            Split(rt[(pos2-1)%m], y, rt1, rt2);
            rt[(pos2-1)%m]=Merge(Merge(rt1, memrt3), rt2);
            a[x]=y;
            lstans=getk(rt[(z-1)%m], (z+m-1)/m);
            printf("%lld\n", lstans);
        }
    }
}
int main(){
    // freopen("D:\\nya\\acm\\B\\test.in","r",stdin);
    // freopen("D:\\nya\\acm\\B\\test.out","w",stdout);
    read(n); read(m); read(q);
    for(int i=1; i<=n; ++i){
        read(a[i]);
    }
    if(m>=400){
        task1::solve();
    }
    else{
        task2::solve();
    }
     
    return 0;
}
c:["$","div",null,{"className":"flex min-h-screen justify-center py-4","children":["$","div",null,{"className":"mx-auto w-4/5","children":[["$","header",null,{"className":"relative w-full rounded-lg py-2 text-slate-300","children":[["$","h1",null,{"className":"text-2xl font-semibold tracking-wide","children":"File Viewer"}],["$","p",null,{"className":"ml-4 mt-2 text-base text-gray-400","children":[["$","span",null,{"className":"px-2 text-lg text-gray-200","children":"/"}],"2025-08-14 \"影石Insta360杯\"2025牛客暑期多校训练营10",["$","span",null,{"className":"px-2 text-lg text-slate-300","children":"/"}],"G",["$","span",null,{"className":"px-2 text-lg text-slate-300","children":"/"}],"code.cpp"]}],["$","div",null,{"className":"absolute right-8 top-2 flex items-center gap-2","children":[["$","a",null,{"href":"/Training-Archive/contests/2025-08-14 \"影石Insta360杯\"2025牛客暑期多校训练营10/problems/G/code.cpp","download":true,"className":"rounded bg-gray-700 px-3 py-1 text-sm text-white hover:bg-gray-600","children":[["$","svg",null,{"stroke":"currentColor","fill":"none","strokeWidth":"2","viewBox":"0 0 24 24","strokeLinecap":"round","strokeLinejoin":"round","className":"mr-2 inline-block text-base","children":["$undefined",[["$","path","0",{"d":"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4","children":[]}],["$","polyline","1",{"points":"7 10 12 15 17 10","children":[]}],["$","line","2",{"x1":"12","y1":"15","x2":"12","y2":"3","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],"Download"]}],["$","a",null,{"href":"/Training-Archive/contests/2025-08-14 \"影石Insta360杯\"2025牛客暑期多校训练营10/problems/G/code.cpp","target":"_blank","rel":"noopener noreferrer","className":"rounded bg-gray-700 px-3 py-1 text-sm text-white hover:bg-gray-600","children":[["$","svg",null,{"stroke":"currentColor","fill":"none","strokeWidth":"2","viewBox":"0 0 24 24","strokeLinecap":"round","strokeLinejoin":"round","className":"mr-2 inline-block text-base","children":["$undefined",[["$","path","0",{"d":"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z","children":[]}],["$","polyline","1",{"points":"14 2 14 8 20 8","children":[]}],["$","line","2",{"x1":"16","y1":"13","x2":"8","y2":"13","children":[]}],["$","line","3",{"x1":"16","y1":"17","x2":"8","y2":"17","children":[]}],["$","polyline","4",{"points":"10 9 9 9 8 9","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],"Raw File"]}]]}]]}],["$","main",null,{"className":"mt-4 flex w-full items-start justify-center gap-4","children":[["$","div",null,{"className":"flex-grow","children":["$","$L16",null,{"code":"$17","ext":".cpp"}]}],"$L18"]}]]}]}]
18:["$","div",null,{"className":"flex-shrink-0 basis-1/5 space-y-2 overflow-auto","children":[["$","div",null,{"className":"overflow-auto","children":[["$","h2",null,{"className":"px-1 py-1 text-sm font-medium text-gray-300","children":"File"}],["$","div",null,{"className":"rounded border-2 border-gray-400 bg-black/80 px-2 py-3 font-mono text-sm text-green-300","children":[["$","div","name",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Name","]"]}]," ",["$","span",null,{"className":"text-green-200","children":"code.cpp"}]]}],["$","div","size",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Size","]"]}]," ",["$","span",null,{"className":"text-yellow-400","children":"6.376 KB (6529 B)"}]]}],["$","div","submission_id",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Submission Id","]"]}]," ",["$","span",null,{"className":"text-green-200","children":"78865132"}]]}],["$","div","status",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Status","]"]}]," ",["$","span",null,{"className":"text-green-200","children":"TLE"}]]}],["$","div","time",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Time","]"]}]," ",["$","span",null,{"className":"text-yellow-400","children":"2001 ms"}]]}],["$","div","memory",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Memory","]"]}]," ",["$","span",null,{"className":"text-yellow-400","children":"0 KB"}]]}],["$","div","language",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Language","]"]}]," ",["$","span",null,{"className":"text-green-200","children":"C++"}]]}],["$","div","submit_time",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Submit Time","]"]}]," ",["$","span",null,{"className":"text-pink-400","children":"2025/08/14 16:41:08"}]]}],null,["$","div","submission_link",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Submission Link","]"]}]," ",["$","a",null,{"href":"https://ac.nowcoder.com/acm/contest/view-submission?submissionId=78865132","target":"_blank","rel":"noopener noreferrer","className":"text-indigo-400 underline hover:text-indigo-200","children":"https://ac.nowcoder.com/acm/contest/view-submission?submissionId=78865132"}]]}]]}]]}],["$","div",null,{"className":"overflow-auto","children":[["$","h2",null,{"className":"px-1 py-1 text-sm font-medium text-gray-300","children":"Problem"}],["$","div",null,{"className":"rounded border-2 border-gray-400 bg-black/80 px-2 py-3 font-mono text-sm text-green-300","children":[["$","div","name",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Name","]"]}]," ",["$","span",null,{"className":"text-green-200","children":"Starlight (starlight)"}]]}],["$","div","link",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Link","]"]}]," ",["$","a",null,{"href":"https://ac.nowcoder.com/acm/contest/108307/G","target":"_blank","rel":"noopener noreferrer","className":"text-indigo-400 underline hover:text-indigo-200","children":"https://ac.nowcoder.com/acm/contest/108307/G"}]]}],["$","div","time_limit",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Time Limit","]"]}]," ",["$","span",null,{"className":"text-yellow-400","children":"2 s"}]]}],["$","div","solved",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Solved","]"]}]," ","$L19"]}],"$L1a"]}]]}],"$L1b"]}]
19:["$","span",null,{"className":"text-cyan-400","children":"false"}]
1a:["$","div","submit_time",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Submit Time","]"]}]," ",["$","span",null,{"className":"text-pink-400","children":"2025/08/14 16:41:08"}]]}]
1b:["$","div",null,{"className":"overflow-auto","children":[["$","h2",null,{"className":"px-1 py-1 text-sm font-medium text-gray-300","children":"Contest"}],["$","div",null,{"className":"rounded border-2 border-gray-400 bg-black/80 px-2 py-3 font-mono text-sm text-green-300","children":[["$","div","name",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Name","]"]}]," ",["$","span",null,{"className":"text-green-200","children":"\"影石Insta360杯\"2025牛客暑期多校训练营10"}]]}],["$","div","date",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Date","]"]}]," ",["$","span",null,{"className":"text-pink-400","children":"2025-08-14"}]]}],["$","div","platform",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Platform","]"]}]," ",["$","span",null,{"className":"text-green-200","children":"nowcoder"}]]}],["$","div","start_time",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Start Time","]"]}]," ",["$","span",null,{"className":"text-pink-400","children":"2025/08/14 12:00:00"}]]}],["$","div","end_time",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","End Time","]"]}]," ",["$","span",null,{"className":"text-pink-400","children":"2025/08/14 17:00:00"}]]}],["$","div","link",{"className":"mb-1 break-all","style":{"textIndent":"-1.2em","paddingLeft":"1.2em"},"children":[["$","span",null,{"className":"text-blue-400","children":["[","Link","]"]}]," ",["$","a",null,{"href":"https://ac.nowcoder.com/acm/contest/108307","target":"_blank","rel":"noopener noreferrer","className":"text-indigo-400 underline hover:text-indigo-200","children":"https://ac.nowcoder.com/acm/contest/108307"}]]}]]}]]}]
12:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
e:null
10:{"metadata":[],"error":null,"digest":"$undefined"}
15:"$10:metadata"
